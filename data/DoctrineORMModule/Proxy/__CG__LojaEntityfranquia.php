<?php

namespace DoctrineORMModule\Proxy\__CG__\Loja\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class franquia extends \Loja\Entity\franquia implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'idFranquia', 'nomeFranquia', 'cnpjFranquia', 'funcionarioIdFuncionario'];
        }

        return ['__isInitialized__', 'idFranquia', 'nomeFranquia', 'cnpjFranquia', 'funcionarioIdFuncionario'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (franquia $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdFranquia()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdFranquia();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdFranquia', []);

        return parent::getIdFranquia();
    }

    /**
     * {@inheritDoc}
     */
    public function getNomeFranquia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomeFranquia', []);

        return parent::getNomeFranquia();
    }

    /**
     * {@inheritDoc}
     */
    public function getCnpjFranquia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCnpjFranquia', []);

        return parent::getCnpjFranquia();
    }

    /**
     * {@inheritDoc}
     */
    public function getFuncionarioIdFuncionario()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFuncionarioIdFuncionario', []);

        return parent::getFuncionarioIdFuncionario();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdFranquia($idFranquia)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdFranquia', [$idFranquia]);

        return parent::setIdFranquia($idFranquia);
    }

    /**
     * {@inheritDoc}
     */
    public function setNomeFranquia($nomeFranquia)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomeFranquia', [$nomeFranquia]);

        return parent::setNomeFranquia($nomeFranquia);
    }

    /**
     * {@inheritDoc}
     */
    public function setCnpjFranquia($cnpjFranquia)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCnpjFranquia', [$cnpjFranquia]);

        return parent::setCnpjFranquia($cnpjFranquia);
    }

    /**
     * {@inheritDoc}
     */
    public function setFuncionarioIdFuncionario($funcionarioIdFuncionario)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFuncionarioIdFuncionario', [$funcionarioIdFuncionario]);

        return parent::setFuncionarioIdFuncionario($funcionarioIdFuncionario);
    }

    /**
     * {@inheritDoc}
     */
    public function toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toString', []);

        return parent::toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getFranquias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFranquias', []);

        return parent::getFranquias();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

}
